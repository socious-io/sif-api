openapi: 3.0.0
info:
  title: Socious-API
  version: 2.2.6
servers:
  - url: http://localhost:4000
    description: Local server (for development purposes)
  - url: https://devsif.socious.io
    description: dev server (for development purposes)
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /auth:
    post:
      summary: create auth
      description: create auth session
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              properties:
                redirect_url:
                  type: string
                  example: https://dev-id.socious.io
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /auth/session:
    post:
      summary: confirm session
      description: create auth session
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
                  example: 1234444
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /auth/refresh:
    post:
      summary: refresh jwt
      description: refresh jwt
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              properties:
                refresh_token:
                  type: string
                  example: jwt_refresh_token
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /projects:
    get:
      summary: get projects
      security:
        - bearerAuth: []
      description: get projects
      tags:
        - Project
      responses:
        '200':
          description: Successful response
      parameters:
        - name: filter.identity
          in: query
          schema:
            type: string
          required: false
    post:
      summary: create projects
      security:
        - bearerAuth: []
      description: create projects
      tags:
        - Project
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                    example: Title of the Service
                  description:
                    type: string
                    example: Description of the Service
                  status:
                    enum:
                      - DRAFT
                      - EXPIRE
                      - ACTIVE
                  city:
                    type: string
                  country:
                    type: string
                  social_cause:
                    type: string
                  cover_id:
                    type: string
                  wallet_address:
                    type: string
                  wallet_env:
                    type: string
  /projects/:id:
    parameters:
      - name: id
        required: true
        in: path
        description: Project ID
        schema:
          type: string
    get:
      summary: get project
      security:
        - bearerAuth: []
      description: get project
      tags:
        - Project
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                    example: Title of the Service
                  description:
                    type: string
                    example: Description of the Service
                  status:
                    enum:
                      - DRAFT
                      - EXPIRE
                      - ACTIVE
                  city:
                    type: string
                  country:
                    type: string
                  social_cause:
                    type: string
                  cover_id:
                    type: string
                  wallet_address:
                    type: string
                  wallet_env:
                    type: string
    patch:
      summary: update projects
      security:
        - bearerAuth: []
      description: create projects
      tags:
        - Project
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                    example: Title of the Service
                  description:
                    type: string
                    example: Description of the Service
                  status:
                    enum:
                      - DRAFT
                      - EXPIRE
                      - ACTIVE
                  city:
                    type: string
                  country:
                    type: string
                  social_cause:
                    type: string
                  cover_id:
                    type: string
                  wallet_address:
                    type: string
                  wallet_env:
                    type: string
    delete:
      summary: delete project
      security:
        - bearerAuth: []
      description: delete project
      tags:
        - Project
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
  /media:
    post:
      summary: upload media
      description: upload media
      tags:
        - Media
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /media/:id:
    parameters:
      - name: id
        required: true
        in: path
        description: Media ID
        schema:
          type: string
    get:
      summary: get media
      security:
        - bearerAuth: []
      description: get media
      tags:
        - Media
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}