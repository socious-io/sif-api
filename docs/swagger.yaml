openapi: 3.0.0
info:
  title: Socious-API
  version: 2.2.6
servers:
  - url: http://localhost:4000
    description: Local server (for development purposes)
  - url: https://devsif.socious.io
    description: dev server (for development purposes)
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /auth:
    post:
      summary: create auth
      description: create auth session
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              properties:
                redirect_url:
                  type: string
                  example: https://dev-id.socious.io
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /auth/session:
    post:
      summary: confirm session
      description: create auth session
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
                  example: 1234444
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /auth/refresh:
    post:
      summary: refresh jwt
      description: refresh jwt
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              properties:
                refresh_token:
                  type: string
                  example: jwt_refresh_token
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /projects:
    get:
      summary: get projects
      security:
        - bearerAuth: []
      description: get projects
      tags:
        - Project
      responses:
        '200':
          description: Successful response
      parameters:
        - name: filter.identity
          in: query
          schema:
            type: string
          required: false
    post:
      summary: create projects
      security:
        - bearerAuth: []
      description: create projects
      tags:
        - Project
      parameters:
      - name: Current-Identity
        in: header
        schema:
          type: string
        example: ebd02a72-f530-4d18-9a72-d7aa9ace1271
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                    example: Title of the Service
                  description:
                    type: string
                    example: Description of the Service
                  status:
                    enum:
                      - DRAFT
                      - EXPIRE
                      - ACTIVE
                  city:
                    type: string
                  country:
                    type: string
                  social_cause:
                    type: string
                  cover_id:
                    type: string
                  wallet_address:
                    type: string
                  wallet_env:
                    type: string
                  website:
                    type: string
  /projects/{id}:
    parameters:
      - name: id
        required: true
        in: path
        description: Project ID
        schema:
          type: string
    get:
      summary: get project
      security:
        - bearerAuth: []
      description: get project
      tags:
        - Project
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                    example: Title of the Service
                  description:
                    type: string
                    example: Description of the Service
                  status:
                    enum:
                      - DRAFT
                      - EXPIRE
                      - ACTIVE
                  city:
                    type: string
                  country:
                    type: string
                  social_cause:
                    type: string
                  cover_id:
                    type: string
                  wallet_address:
                    type: string
                  wallet_env:
                    type: string
                  website:
                    type: string
    patch:
      summary: update projects
      security:
        - bearerAuth: []
      description: create projects
      tags:
        - Project
      parameters:
      - name: Current-Identity
        in: header
        schema:
          type: string
        example: ebd02a72-f530-4d18-9a72-d7aa9ace1271
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                    example: Title of the Service
                  description:
                    type: string
                    example: Description of the Service
                  status:
                    enum:
                      - DRAFT
                      - EXPIRE
                      - ACTIVE
                  city:
                    type: string
                  country:
                    type: string
                  social_cause:
                    type: string
                  cover_id:
                    type: string
                  wallet_address:
                    type: string
                  wallet_env:
                    type: string
                  website:
                    type: string
    delete:
      summary: delete project
      security:
        - bearerAuth: []
      description: delete project
      tags:
        - Project
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string  
  /projects/{id}/votes:
    post:
      summary: vote for project
      description: vote for project
      security:
        - bearerAuth: []
      tags:
        - Project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
  /projects/{id}/donates:
    post:
      summary: donate to project
      description: donate to project
      security:
        - bearerAuth: []
      tags:
        - Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the project to donate to
      requestBody:
        content:
          application/json:
            schema:
              properties:
                currency:
                  type: string
                total_amount:
                  type: number
                txid:
                  type: string
                meta:
                  type: object
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
  /projects/{id}/comments:
    get:
      summary: get all comments
      description: get all comments
      security:
        - bearerAuth: []
      tags:
        - Project
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
    post:
      summary: create comment
      description: create comment
      security:
        - bearerAuth: []
      tags:
        - Project
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  type: string
                media_id:
                  type: string
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: {}
  /projects/comments/{id}:
    get:
      summary: get comment
      description: get comment
      security:
        - bearerAuth: []
      tags:
        - Project
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the comment to retrieve
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
    put:
      summary: update comment
      description: update comment
      security:
        - bearerAuth: []
      tags:
        - Project
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the comment to update
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  type: string
                media_id:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
    delete:
      summary: delete comment
      description: delete comment
      security:
        - bearerAuth: []
      tags:
        - Project
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the comment to delete
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  
  /comments/{id}/likes:
    post:
      summary: like comment
      description: like comment
      security:
        - bearerAuth: []
      tags:
        - Comment
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the comment to like
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: {}
    delete:
      summary: unlike comment
      description: unlike comment
      security:
        - bearerAuth: []
      tags:
        - Comment
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the comment to unlike
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /comments/{id}/reactions:
    post:
      summary: react on comment
      description: react on comment
      security:
        - bearerAuth: []
      tags:
        - Comment
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the comment to react
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reaction:
                  type: string
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: {}
    delete:
      summary: unreact on comment
      description: unreact on comment
      security:
        - bearerAuth: []
      tags:
        - Comment
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the comment to unreact
  /media:
    post:
      summary: upload media
      description: upload media
      security:
        - bearerAuth: []
      tags:
        - Media
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /media/{id}:
    parameters:
      - name: id
        required: true
        in: path
        description: Media ID
        schema:
          type: string
    get:
      summary: get media
      security:
        - bearerAuth: []
      description: get media
      tags:
        - Media
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /users/profile:
    get:
      summary: get current user profile
      security:
        - bearerAuth: []
      description: get user profile
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /identities:
    get:
      summary: get current user identities
      security:
        - bearerAuth: []
      description: get current user identities
      tags:
        - Identities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}

  /kybs:
    post:
        summary: new kyb
        security:
          - bearerAuth: []
        description:  new kyb for current organization
        tags:
          - KYB
        parameters:
          - name: Current-Identity
            in: header
            schema:
              type: string
            example: ebd02a72-f530-4d18-9a72-d7aa9ace1271
        requestBody:
          content:
            application/json:
              schema:
                type: object
                example:
                  documents: ["http://media_url_1", "http://media_url_2", "http://media_url_3"]
        responses:
          '200':
            description: Successful response
            content:
              application/json:
                schema: {}
    get:
      summary: get kyb
      security:
        - bearerAuth: []
      description: get current organization kyb
      tags:
        - KYB
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: ebd02a72-f530-4d18-9a72-d7aa9ace1271
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                  user_id:
                    type: string
                  organization_id:
                    type: string
                  status:
                    type: string
                    enum:
                      - PENDING
                      - APPROVED
                      - REJECTED
                  documents:
                    type: array
                    items:
                      type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
  /rounds:
    get:
      summary: get latest round
      security:
        - bearerAuth: []
      description: get latest round
      tags:
        - Rounds
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  cover_id:
                    type: string
                  pool_amount:
                    type: integer
                  voting_start_at:
                    type: string
                  voting_end_at:
                    type: string
                  submission_start_at:
                    type: string
                  submission_end_at:
                    type: string
  
  /organizations:
    get:
      summary: get organizations
      security:
        - bearerAuth: []
      description: get organizations
      tags:
        - Organizations
      parameters:
        - in: query
          name: shortname
          schema:
            type: string
          required: false
          description: shortname of organization
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                    shortname:
                      type: string
                    name:
                      type: string
                    bio:
                      type: string
                    description:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    city:
                      type: string
                    country:
                      type: string
                    address:
                      type: string
                    website:
                      type: string
                    mission:
                      type: string
                    culture:
                      type: string
                    status:
                      type: string
                      enum:
                        - PENDING
                        - APPROVED
                        - REJECTED
                    verified_impact:
                      type: boolean
                    verified:
                      type: boolean
                    created_at:
                      type: string
                    updated_at:
                      type: string
  /organizations/{id}:
    get:
      summary: get organization
      security:
        - bearerAuth:
      description: Retrieve an organization by ID
      tags:
        - Organization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the organization to retrieve
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '404':
          description: Organization not found